// /**
//  * Print out the bare and style component css
//  * @param 	{List<Color>} 		[$color=default] 		The color to generate
//  */
// @mixin s-component-name(
// 	$color : default
// ) {
// 	@include s-component-name-bare();
// 	@include s-component-name-style($color);
// }
//
// /**
//  * Print out the bare component css
//  */
// @mixin s-component-name-bare() {
// 	@include s-component('s-component-name') {
//
// 	}
// }
//
// /**
//  * Print out the style component css
//  * @param 	{Color} 		[$color=default] 		The color to generate
//  */
// @mixin s-component-name-style(
// 	$color : default
// ) {
// 	@include s-component('s-component-name') {
//
// 	}
// }

@function s-range-selector() {
	@return unquote('[is="#{s-component()}"] + [#{s-component()}-container]');
}

@mixin s-range-style-container(
	$state : null,
	$componentNameNest : true
) {
	@include s-component('s-range') {
		@if $componentNameNest {
			#{s-range-selector()} {
				@include _s-range-style-container($state) {
					@content;
				}
			}
		} @else {
			@include _s-range-style-container($state) {
				@content;
			}
		}
	}
}
@mixin _s-range-style-container(
	$state : null
) {
	@include s-component('s-range') {
		@if not $state {
			.#{s-component()}-target {
				@content;
			}
		} @else if $state == hover {
			.#{s-component()}-target:hover {
				@content;
			}
		}
	}
}

@mixin s-range-style-connect(
	$state : null,
	$componentNameNest : true
) {
	@include s-component('s-range') {
		@if $componentNameNest {
			#{s-range-selector()} {
				@include _s-range-style-connect($state) {
					@content;
				}
			}
		} @else {
			@include _s-range-style-connect($state) {
				@content;
			}
		}
	}
}
@mixin _s-range-style-connect(
	$state : null
) {
	@include s-component('s-range') {
		@if not $state {
			.#{s-component()}-connect {
				@content;
			}
			.#{s-component()}-target.#{s-component()}-connect {
				.#{s-component()}-base {
					@content;
				}
			}
		} @else if $state == hover {
			.#{s-component()}-target:hover .#{s-component()}-connect {
				@content;
			}
			.#{s-component()}-target:hover.#{s-component()}-connect {
				.#{s-component()}-base {
					@content;
				}
			}
		}
	}
}

@mixin s-range-style-handle(
	$state : null,
	$componentNameNest : true
) {
	@include s-component('s-range') {
		@if $componentNameNest {
			#{s-range-selector()} {
				@include _s-range-style-handle($state) {
					@content;
				}
			}
		} @else {
			@include _s-range-style-handle($state) {
				@content;
			}
		}
	}
}
@mixin _s-range-style-handle(
	$state : null
) {
	@include s-component('s-range') {
		@if not $state {
			.#{s-component()}-handle {
				@content;
			}
		} @else if $state == hover {
			.#{s-component()}-handle:hover {
				@content;
			}
		} @else if $state == active {
			.#{s-component()}-active {
				@content;
			}
		}
	}
}

@mixin s-range-style-handle-value(
	$state : null,
	$componentNameNest : true
) {
	@include s-component('s-range') {
		@if $componentNameNest {
			#{s-range-selector()} {
				@include _s-range-style-handle-value($state) {
					@content;
				}
			}
		} @else {
			@include _s-range-style-handle-value($state) {
				@content;
			}
		}
	}
}
@mixin _s-range-style-handle-value(
	$state : null
) {
	@include s-component('s-range') {
		@if not $state {
			.#{s-component()}-handle__value {
				@content;
			}
		} @else if $state == hover {
			.#{s-component()}-handle:hover .#{s-component()}-handle__value {
				@content;
			}
		} @else if $state == active {
			.#{s-component()}-active .#{s-component()}-handle__value {
				@content;
			}
		}
	}
}

@mixin s-range-style-base(
	$state : null,
	$componentNameNest : true
) {
	@include s-component('s-range') {
		@if $componentNameNest {
			#{s-range-selector()} {
				@include _s-range-style-base($state) {
					@content;
				}
			}
		} @else {
			@include _s-range-style-base($state) {
				@content;
			}
		}
	}
}
@mixin _s-range-style-base(
	$state : null
) {
	@include s-component('s-range') {
		@if not $state {
			.#{s-component()}-target.#{s-component()}-background,
			.#{s-component()}-background {
				@content;
			}
		} @else if $state == hover {
			.#{s-component()}-target:hover.#{s-component()}-background,
			.#{s-component()}-target:hover .#{s-component()}-background {
				@content;
			}
		}
	}
}

@mixin s-range-style-tooltip(
	$state : null,
	$componentNameNest : true
) {
	@include s-component('s-range') {
		@if $componentNameNest {
			#{s-range-selector()} {
				@include _s-range-style-tooltip($state) {
					@content;
				}
			}
		} @else {
			@include _s-range-style-tooltip($state) {
				@content;
			}
		}
	}
}
